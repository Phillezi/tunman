name: Release Binaries

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        binary: [tunman, tunmand]
      fail-fast: false

    env:
      CGO_ENABLED: 0
      VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Build ${{ matrix.binary }} for ${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          mkdir -p dist
          BIN_NAME="${{ matrix.binary }}"
          OS="${{ matrix.goos }}"
          ARCH="${{ matrix.goarch }}"
          EXT=""
          [ "$OS" = "windows" ] && EXT=".exe"

          OUTPUT="${BIN_NAME}_${OS}_${ARCH}${EXT}"

          GOOS=$OS GOARCH=$ARCH go build -ldflags "-w -s -X github.com/Phillezi/tunman/cmd/$*/cli.version=$VERSION" -o "$OUTPUT" ./cmd/$BIN_NAME

          mkdir "$BIN_NAME"
          mv "$OUTPUT" "$BIN_NAME/"
          tar -czf "dist/${BIN_NAME}_${OS}_${ARCH}.tar.gz" "$BIN_NAME"
          rm -r "$BIN_NAME"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
